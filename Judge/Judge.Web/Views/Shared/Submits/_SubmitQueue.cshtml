@using System.Globalization
@model Judge.Application.ViewModels.Submit.SubmitQueueViewModel

<div class="panel panel-default">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>@Resources.Date</th>
                <th>@Resources.Author</th>
                @if (Model.ShowProblem)
                {
                    <th>@Resources.Task</th>
                }
                <th>@Resources.Language</th>
                <th>@Resources.Result</th>
                <th>@Resources.PassedTests</th>
                <th>@Resources.ExecutionTime</th>
                <th>@Resources.AllocatedMemory</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Submits)
            {
                <tr>
                    <td>
                        @if (item.ResultsEnabled)
                        {
                            @Html.ActionLink(item.SubmitTime.ToString(CultureInfo.CurrentUICulture), "Solution", "Problems", new { submitResultId = item.SubmitResultId }, new { target = "_blank" })
                        }
                        else
                        {
                            @item.SubmitTime.ToString(CultureInfo.CurrentUICulture)
                        }
                    </td>
                    <td>
                        @Html.ActionLink(item.UserName, "Statistics", "User", new { id = item.UserId }, null)
                    </td>
                    @if (Model.ShowProblem)
                    {
                        <td>
                            @Html.ActionLink(item.ProblemName, "Statement", "Problems", new { id = item.ProblemId }, null)
                        </td>
                    }
                    <td>
                        @item.Language
                    </td>
                    <td>
                        @if (item.ShowAdditionalResults)
                        {
                            <a href="#" data-toggle="modal" data-target="#modal" data-submit-result="@item.CompileResult">@item.ResultDescription</a>
                        }
                        else
                        {
                            var css = item.Pending ? string.Empty : item.Solved ? "green" : "red";
                            <span class="@css">@item.ResultDescription</span>
                        }
                    </td>
                    <td>
                        @item.PassedTests
                    </td>
                    <td>
                        @item.ExecutionTime
                    </td>
                    <td>
                        @item.AllocatedMemory
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<nav>
    @Html.HiddenFor(o => o.Pagination.CurrentPage, new { id = "page" })
    <ul class="pagination">
        <li>
            <a href="#" aria-label="Previous" data-page="1">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @for (var page = Model.Pagination.FirstDisplayPage; page <= Model.Pagination.LastDisplayPage; page++)
        {
            if (Model.Pagination.IsCurrent(page))
            {
                <li class="active">
                    <a href="#" data-page="@page">@page</a>
                </li>
            }
            else
            {
                <li>
                    <a href="#" data-page="@page">@page</a>
                </li>
            }
        }
        <li>
            <a href="#" aria-label="Next" data-page="@Model.Pagination.TotalPages">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>