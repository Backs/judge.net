@using Markdig
@model Judge.Application.ViewModels.Contests.ContestStatementViewModel
@{
    ViewBag.Title = $"{Model.Label}. {Model.Name}";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().UseBootstrap().Build();
}

<h2>@Html.ActionLink(Model.Contest.Name, "Tasks", new { id = Model.Contest.Id }): @ViewBag.Title</h2>

<p>@Resources.TimeLimit: <b>@Model.TimeLimitSeconds.ToString("F3")</b> @Resources.Seconds</p>
<p>@Resources.MemoryLimit: <b>@Model.MemoryLimitMegabytes.ToString("F3")</b> @Resources.Megabytes</p>

<!-- Modal -->
<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">@Resources.Result</h4>
            </div>
            <div class="modal-body">
                <pre></pre>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Close</button>
            </div>
        </div>
    </div>
</div>

<div class="well well-sm" id="statement">
    @Html.Raw(Markdown.ToHtml(Model.Statement, pipeline))
</div>

@if (User.Identity.IsAuthenticated)
{
    if (Model.Contest.IsFinished)
    {
        <div class="alert alert-danger" role="alert">@Resources.ContestFinishedNotification</div>
    }
    else
    {
        <div id="submit-container">
            @Html.Action("SubmitSolution", new { contestId = Model.Contest.Id, label = Model.Label })
        </div>
    }
    <div id="submit-queue">
        @Html.Action("UserSubmitQueue", new { contestId = Model.Contest.Id, problemId = Model.Id, page = 1 })
    </div>
}
else
{
    <div>
        @Html.ActionLink(Resources.Enter, "Login", "Account", new { returnUrl = Request.Url.ToString() }, null), @Resources.ToSubmitSolutions
    </div>
}